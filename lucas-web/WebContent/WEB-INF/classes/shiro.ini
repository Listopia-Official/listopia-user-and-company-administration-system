[main]
authc.loginUrl = /login.jsf
authc.usernameParam = login:usernameInputText
authc.passwordParam = login:passwordInputPassword

#Changeme
securityManager.rememberMeManager.cipherKey = 0x87f48D387A87E87D87B8777878700234ABCDEEEFFF

dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/__default

#Configure JDBC realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

#Configure JNDI datasource for JDBC realm
jdbcRealm.dataSource = $dataSource

jdbcRealm.permissionsLookupEnabled = true

#Configure SQL queries for JDBC realm.
jdbcRealm.authenticationQuery = SELECT password FROM loginuser WHERE username = ?
jdbcRealm.userRolesQuery = SELECT name FROM loginroles WHERE id = ANY (SELECT roles_ID FROM loginuser_loginroles WHERE LoginUser_ID = (SELECT id FROM loginuser where username=?))
jdbcRealm.permissionsQuery = SELECT permissions FROM loginpermissions WHERE LoginUserRole_ID=(SELECT id FROM loginroles WHERE name = ?)

#Configure credentials matcher for JDBC and INI realm
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService
iniRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.credentialsMatcher = $passwordMatcher

[users]
#Changeme
root = $shiro1$SHA-256$500000$wpXo45Vf2+vzOUFbqbzWyw==$xLBSVoSbkfK5VYFHeFnAmy2ZskQg96R7jh+mqts/eqM=,root

[roles]
root = *

[urls]
/javax.faces.resource/** = ssl[8181],anon
/*.xhtml=ssl[8181],authc, perms["accessXHTMLs"]
/login.*=ssl[8181],authc
/users.*=ssl[8181],authc, perms["user:accessView"]
/accounts.*=ssl[8181],authc, perms["account:accessView"]
/loginRoles.*=ssl[8181],authc, perms["loginRole:accessView"]
/loginUsers.*=ssl[8181],authc, perms["loginUser:accessView"]
/preferences.*=ssl[8181],authc, perms["login:accessPreferencesView"]
/** = ssl[8181],authc